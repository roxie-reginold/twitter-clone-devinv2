# .github/workflows/auto-update-docs.yml
name: Automated Documentation Update

on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: write       # to allow committing docs updates
  pull-requests: write  # to push back into the PR branch
  issues: read

jobs:
  update-docs:
    runs-on: ubuntu-latest
    # don’t run when GH Actions bot or PR head asks to skip
    if: >
      github.actor != 'github-actions[bot]' &&
      !contains(github.event.pull_request.head.sha, '[skip docs]')

    steps:
      - name: Checkout PR head
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0

      - name: Get list of changed files
        id: pr-files
        run: |
          FILES=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}/files" \
            | jq -r '[.[].filename] | @json')
          echo "files=$FILES" >> $GITHUB_OUTPUT

      - name: Ask Devin to update, commit & push docs
        id: devin-docs
        env:
          DEVIN_API_KEY:   ${{ secrets.DEVIN_API_KEY }}
          CHANGED_FILES:   ${{ steps.pr-files.outputs.files }}
        run: |
          UPDATE_PROMPT="
          You are Devin Docs Assistant.
          1. Analyze the codebase and review the diffs in PR #${{ github.event.pull_request.number }}.
          2. Update only the existing documentation files to match the code changes.
          3. Commit those doc updates with the message: \"auto-update via Devin [skip docs]\".
          4. Push that commit back into the PR branch ($GITHUB_REF_NAME).
          5. Do not modify code, create a new README.md file if documentation does not exist.
          6. Ensure your commit message includes [skip docs] so this workflow does not retrigger."
          ESCAPED=$(jq -Rs --arg p "$UPDATE_PROMPT" '$p')
          curl -s -X POST \
            -H "Authorization: Bearer $DEVIN_API_KEY" \
            -H "Content-Type: application/json" \
            -d "{\"prompt\": $ESCAPED}" \
            https://api.devin.ai/v1/sessions

      - name: Wait for Devin to finish
        run: |
          echo "⏳ Polling Devin session until completion..."
          # insert your polling logic here (GET /v1/sessions/{session_id})
